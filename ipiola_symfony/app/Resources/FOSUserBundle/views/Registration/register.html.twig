
{% extends "FOSUserBundle::layout.html.twig" %}

{% form_theme form _self %}

{% block form_row %}
    {% spaceless %}
    <div class="form-group {% if not errors is empty %}has-error{% endif %}">
        {{ form_label(form, null, {'label_attr': {'class': 'control-label visible-ie8 visible-ie9'}}) }}
        {{ form_widget(form, {'attr': {'placeholder': label }}) }}
        {{ form_errors(form) }}
    </div>
    {% endspaceless %}
{% endblock form_row %}

{% trans_default_domain 'FOSUserBundle' %}

{% block page_title %}{{ 'page.title.registration.register'|trans({}, 'messages') }}{% endblock %}

{% block fos_user_content %}
    <!-- BEGIN REGISTRATION FORM -->
    {{ form_start(form, {'method': 'post', 'action': path('fos_user_registration_register'), 'attr': {'class': 'register-form', 'style': 'display:inline'}}) }}
        <h3 class="font-green">{{ 'page.title.registration.register'|trans({}, 'messages') }}</h3>
        {{ form_widget(form) }}
        <div class="form-actions">
            <a href="{{ path('fos_user_security_login') }}" class="btn green btn-outline">{{ 'link.back'|trans({}, 'messages') }}</a>
            <button type="submit" id="register-submit-btn" class="btn btn-success uppercase pull-right">{{ 'registration.submit'|trans }}</button>
        </div>
    {{ form_end(form) }}
    <!-- END REGISTRATION FORM -->
{% endblock %}

{% block page_level_scripts %}
<script type="text/javascript">
var Login = function() {

    var handleRegister = function() {

        function format(state) {
            if (!state.id) { return state.text; }
            var $state = $(
             '<span><img src="../assets/global/img/flags/' + state.element.value.toLowerCase() + '.png" class="img-flag" /> ' + state.text + '</span>'
            );

            return $state;
        }

        if (jQuery().select2 && $('#country_list').size() > 0) {
            $("#country_list").select2({
                placeholder: '<i class="fa fa-map-marker"></i>&nbsp;Select a Country',
                templateResult: format,
                templateSelection: format,
                width: 'auto',
                escapeMarkup: function(m) {
                    return m;
                }
            });


            $('#country_list').change(function() {
                $('.register-form').validate().element($(this)); //revalidate the chosen dropdown value and show error or success message for the input
            });
        }

        $('.register-form').validate({
            errorElement: 'span', //default input error message container
            errorClass: 'help-block', // default input error message class
            focusInvalid: false, // do not focus the last invalid input
            ignore: "",
            rules: {
                "fos_user_registration_form[email]": {
                    required: true,
                    email: true
                },
                "fos_user_registration_form[username]": {
                    required: true
                },
                "fos_user_registration_form[plainPassword][first]": {
                    required: true
                },
                "fos_user_registration_form[plainPassword][second]": {
                    equalTo: "#fos_user_registration_form_plainPassword_first"
                },
            },

            messages: { // custom messages for radio buttons and checkboxes
                "fos_user_registration_form[email]": {
                    required: "{{ 'validation.required'|trans({}, 'messages') }}",
                    email: "{{ 'fos_user.email.invalid'|trans({}, 'validators') }}",
                },
                "fos_user_registration_form[username]": {
                    required: "{{ 'validation.required'|trans({}, 'messages') }}"
                },
                "fos_user_registration_form[plainPassword][first]": {
                    required: "{{ 'validation.required'|trans({}, 'messages') }}"
                },
                "fos_user_registration_form[plainPassword][second]": {
                    required: "{{ 'validation.required'|trans({}, 'messages') }}",
                    equalTo: "{{ 'fos_user.password.mismatch'|trans({}, 'validators') }}"
                },
            },

            invalidHandler: function(event, validator) { //display error alert on form submit

            },

            highlight: function(element) { // hightlight error inputs
                $(element)
                    .closest('.form-group').addClass('has-error'); // set error class to the control group
            },

            success: function(label) {
                label.closest('.form-group').removeClass('has-error');
                label.remove();
            },

            errorPlacement: function(error, element) {
                if (element.attr("name") == "tnc") { // insert checkbox errors after the container
                    error.insertAfter($('#register_tnc_error'));
                } else if (element.closest('.input-icon').size() === 1) {
                    error.insertAfter(element.closest('.input-icon'));
                } else {
                    error.insertAfter(element);
                }
            },

            submitHandler: function(form) {
                form[0].submit();
            }
        });

        $('.register-form input').keypress(function(e) {
            if (e.which == 13) {
                if ($('.register-form').validate().form()) {
                    $('.register-form').submit();
                }
                return false;
            }
        });

        jQuery('#register-btn').click(function() {
            jQuery('.login-form').hide();
            jQuery('.register-form').show();
        });

        jQuery('#register-back-btn').click(function() {
            jQuery('.login-form').show();
            jQuery('.register-form').hide();
        });
    }

    return {
        //main function to initiate the module
        init: function() {
            handleRegister();
        }

    };

}();

jQuery(document).ready(function() {
    Login.init();
});
</script>
{% endblock %}