
{% extends "FOSUserBundle::layout.html.twig" %}

{% trans_default_domain 'FOSUserBundle' %}

{% block page_title %}{{ 'page.title.login'|trans({}, 'messages') }}{% endblock %}

{% block fos_user_content %}
    <!-- BEGIN LOGIN FORM -->
    <form class="login-form" action="{{ path("fos_user_security_check") }}" method="post">

        {% if csrf_token %}
            <input type="hidden" name="_csrf_token" value="{{ csrf_token }}" />
        {% endif %}

        <h3 class="form-title font-green">{{ 'page.title.login'|trans({}, 'messages') }}</h3>

        {% if error %}
            <div class="alert alert-danger">
                <button class="close" data-close="alert"></button>
                <span>{{ error.messageKey|trans(error.messageData, 'security') }}</span>
            </div>
        {% endif %}

        <div class="alert alert-danger display-hide">
            <button class="close" data-close="alert"></button>
            <span> {{ 'msg.enter_user_password'|trans({}, 'messages') }} </span>
        </div>

        <div class="form-group">
            <!--ie8, ie9 does not support html5 placeholder, so we just show field title for that-->
            <label class="control-label visible-ie8 visible-ie9">{{ 'security.login.username'|trans }}</label>
            <input class="form-control form-control-solid placeholder-no-fix" type="text" autocomplete="off" placeholder="{{ 'security.login.username'|trans }}" name="_username" value="{{ last_username }}" required />
        </div>

        <div class="form-group">
            <label class="control-label visible-ie8 visible-ie9">{{ 'security.login.password'|trans }}</label>
            <input class="form-control form-control-solid placeholder-no-fix" type="password" autocomplete="off" placeholder="{{ 'security.login.password'|trans }}" name="_password" required />
        </div>

        <div class="form-group">
            <label class="rememberme check mt-checkbox mt-checkbox-outline">
                <input type="checkbox" id="remember_me" name="_remember_me" value="on" />
                {{ 'security.login.remember_me'|trans }}
                <span></span>
            </label>
        </div>

        <div class="form-actions">
            <button type="submit" class="btn green uppercase">{{ 'security.login.submit'|trans }}</button>
            <a href="{{ path('fos_user_resetting_request') }}" id="forget-password" class="forget-password">{{ 'link.forgot_password'|trans({}, 'messages') }}</a>
        </div>
        {# <div class="login-options">
            <h4>Or login with</h4>
            <ul class="social-icons">
                <li>
                    <a class="social-icon-color facebook" data-original-title="facebook" href="javascript:;"></a>
                </li>
                <li>
                    <a class="social-icon-color twitter" data-original-title="Twitter" href="javascript:;"></a>
                </li>
                <li>
                    <a class="social-icon-color googleplus" data-original-title="Goole Plus" href="javascript:;"></a>
                </li>
                <li>
                    <a class="social-icon-color linkedin" data-original-title="Linkedin" href="javascript:;"></a>
                </li>
            </ul>
        </div> #}
        <div class="create-account">
            <p>
                <a href="{{ path('fos_user_registration_register') }}" id="register-btn" class="uppercase">{{ 'link.create_account'|trans({}, 'messages') }}</a>
            </p>
        </div>
    </form>
    <!-- END LOGIN FORM -->
{% endblock %}

{% block page_level_scripts %}
<script type="text/javascript">
var Login = function() {

    var handleLogin = function() {

        $('.login-form').validate({
            errorElement: 'span', //default input error message container
            errorClass: 'help-block', // default input error message class
            focusInvalid: false, // do not focus the last invalid input
            rules: {
                username: {
                    required: true
                },
                password: {
                    required: true
                },
                remember: {
                    required: false
                }
            },

            messages: {
                username: {
                    required: "Username is required."
                },
                password: {
                    required: "Password is required."
                }
            },

            invalidHandler: function(event, validator) { //display error alert on form submit
                $('.alert-danger', $('.login-form')).show();
            },

            highlight: function(element) { // hightlight error inputs
                $(element)
                    .closest('.form-group').addClass('has-error'); // set error class to the control group
            },

            success: function(label) {
                label.closest('.form-group').removeClass('has-error');
                label.remove();
            },

            errorPlacement: function(error, element) {
                error.insertAfter(element.closest('.input-icon'));
            },

            submitHandler: function(form) {
                form.submit(); // form validation success, call ajax form submit
            }
        });

        $('.login-form input').keypress(function(e) {
            if (e.which == 13) {
                if ($('.login-form').validate().form()) {
                    $('.login-form').submit(); //form validation success, call ajax form submit
                }
                return false;
            }
        });
    }

    return {
        //main function to initiate the module
        init: function() {
            handleLogin();
        }
    };

}();

jQuery(document).ready(function() {
    Login.init();
});
</script>
{% endblock %}